{"ast":null,"code":"import _classCallCheck from \"/Users/kyleschneider/Documents/pt-oncology-mvp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kyleschneider/Documents/pt-oncology-mvp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kyleschneider/Documents/pt-oncology-mvp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kyleschneider/Documents/pt-oncology-mvp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kyleschneider/Documents/pt-oncology-mvp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/kyleschneider/Documents/pt-oncology-mvp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/kyleschneider/Documents/pt-oncology-mvp/src/components/User/register/register.js\";\nimport React, { Component } from 'react'; // import * as Yup from 'yup';\n\nimport { connect } from 'react-redux';\nimport { signUp, signIn, registerPatient } from '../../../store/actions/index';\nimport PropTypes from 'prop-types';\nimport WizardFormFirstPage from './WizardFormFirstPage';\nimport WizardFormSecondPage from './WizardFormSecondPage';\nimport WizardFormThirdPage from './WizardFormThirdPage';\nimport logo from '../../../svg/LCPT.jpeg'; // const LoginSchema = Yup.object().shape({\n//     password:Yup.string()\n//     .min(6,\" Too short\")\n//     .required(\"Required !!\"),\n//     email:Yup.string()\n//     .email('Invalid Email :(')\n//     .required(\"Required !!\")\n// })\n\nvar Register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Register, _Component);\n\n  function Register(props) {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Register).call(this, props));\n    _this.state = {\n      success: false,\n      validation: false,\n      creatingPatient: false,\n      userId: '908098980'\n    };\n    _this.nextPage = _this.nextPage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.previousPage = _this.previousPage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      page: 1,\n      creatingPatient: false,\n      userId: _this.props.userId,\n      finishSignup: false\n    };\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.setState({userId: this.props.userId})\n      console.log(this.state.userId);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(formValues) {\n      // console.log(this.state.creatingPatient)\n      // if(this.state.creatingPatient === true){\n      //     this.props.history.push(`/quiz/${this.state.userId}`);\n      // }\n      console.log(this.state.success);\n\n      if (this.state.success) {\n        this.props.history.push(\"/quiz/\".concat(this.state.userId));\n      }\n    }\n  }, {\n    key: \"nextPage\",\n    value: function nextPage() {\n      this.setState({\n        page: this.state.page + 1\n      });\n    }\n  }, {\n    key: \"previousPage\",\n    value: function previousPage() {\n      this.setState({\n        page: this.state.page - 1\n      });\n    }\n  }, {\n    key: \"route\",\n    value: function route(props) {\n      this.registerPatient(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var userId = this.state.userId;\n      var registerPatient = this.props.registerPatient;\n      var onSubmit = this.props.onSubmit;\n      var page = this.state.page;\n      var submitting = this.props.submitting;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, page === 1 && React.createElement(WizardFormFirstPage, {\n        onSubmit: this.nextPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), page === 2 && React.createElement(WizardFormSecondPage, {\n        previousPage: this.previousPage,\n        onSubmit: this.nextPage // initialValues={{userId: userId}} \n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), page === 3 && React.createElement(WizardFormThirdPage, {\n        previousPage: this.previousPage,\n        onSubmit: registerPatient,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      var auth = props.createPatient;\n\n      if (auth) {\n        return {\n          success: auth ? true : false\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nRegister.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    userId: state.auth.userId,\n    createPatient: state.auth.createPatient\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signUp: signUp,\n  signIn: signIn,\n  registerPatient: registerPatient\n})(Register);","map":{"version":3,"sources":["/Users/kyleschneider/Documents/pt-oncology-mvp/src/components/User/register/register.js"],"names":["React","Component","connect","signUp","signIn","registerPatient","PropTypes","WizardFormFirstPage","WizardFormSecondPage","WizardFormThirdPage","logo","Register","props","state","success","validation","creatingPatient","userId","nextPage","bind","previousPage","page","finishSignup","console","log","formValues","history","push","setState","onSubmit","submitting","auth","createPatient","propTypes","func","isRequired","mapStateToProps","isSignedIn"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n// import * as Yup from 'yup';\n\nimport { connect } from 'react-redux';\nimport { signUp, signIn, registerPatient } from '../../../store/actions/index'\nimport PropTypes from 'prop-types'\nimport WizardFormFirstPage from './WizardFormFirstPage'\nimport WizardFormSecondPage from './WizardFormSecondPage'\nimport WizardFormThirdPage from './WizardFormThirdPage'\nimport logo from '../../../svg/LCPT.jpeg';\n\n\n// const LoginSchema = Yup.object().shape({\n//     password:Yup.string()\n//     .min(6,\" Too short\")\n//     .required(\"Required !!\"),\n//     email:Yup.string()\n//     .email('Invalid Email :(')\n//     .required(\"Required !!\")\n// })\n\n \n\n\nclass Register extends Component {\n    \n    constructor(props) {\n      super(props)\n      this.nextPage = this.nextPage.bind(this)\n      this.previousPage = this.previousPage.bind(this)\n      this.state = {\n        page: 1,\n        creatingPatient: false,\n        userId:this.props.userId,\n        finishSignup:false\n      }\n    }\n\n    state ={\n        success:false,\n        validation: false,\n        creatingPatient: false,\n        userId:'908098980'\n\n    }\n    componentDidMount(){\n        // this.setState({userId: this.props.userId})\n        console.log(this.state.userId)\n    }\n\n    static getDerivedStateFromProps(props, state){\n\n      const auth = props.createPatient\n    \n    \n      if(auth){\n          return{\n              success: auth ? true : false\n          }\n      }\n      return null;\n    }\n\n    componentDidUpdate(formValues){\n        // console.log(this.state.creatingPatient)\n        // if(this.state.creatingPatient === true){\n        //     this.props.history.push(`/quiz/${this.state.userId}`);\n        // }\n        console.log(this.state.success)\n        if(this.state.success){\n          this.props.history.push(`/quiz/${this.state.userId}`);\n        }\n    }\n\n    nextPage() {\n      this.setState({ page: this.state.page + 1 })\n    }\n  \n    previousPage() {\n      this.setState({ page: this.state.page - 1 })\n    }\n\n    route(props){\n      this.registerPatient(props)\n    }\n\n\n  \n\n \n    render() {\n      \n      const {userId} = this.state\n      const { registerPatient } = this.props;\n      const { onSubmit } = this.props\n      const { page } = this.state\n      const { submitting } = this.props\n\n\n      return (\n        <div>\n          <div className=\"App\">\n            <div className=\"App-header\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              {/* <h2>Lake City PT Oncology</h2> */}\n            </div>\n          </div>\n       \n\n          <div>\n            {page === 1 && <WizardFormFirstPage onSubmit={this.nextPage}/>}\n            {page === 2 && (\n              <WizardFormSecondPage\n                previousPage={this.previousPage}\n                onSubmit={this.nextPage}\n                // initialValues={{userId: userId}} \n              />\n            )}\n            {page === 3 && (\n              <WizardFormThirdPage\n                previousPage={this.previousPage}\n                onSubmit={registerPatient}\n              />\n            )}\n          </div>\n\n        </div>\n\n\n      )\n    }\n\n}\n  \nRegister.propTypes = {\n    onSubmit: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    isSignedIn: state.auth.isSignedIn,\n    userId: state.auth.userId,\n    createPatient: state.auth.createPatient\n});\n  \nexport default connect(mapStateToProps,{\n    signUp, signIn, registerPatient\n})(Register)\n\n\n"]},"metadata":{},"sourceType":"module"}