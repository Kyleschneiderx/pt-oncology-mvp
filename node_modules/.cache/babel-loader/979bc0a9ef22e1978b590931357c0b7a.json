{"ast":null,"code":"var _jsxFileName = \"/Users/kyleschneider/Documents/pt-oncology-mvp/src/components/User/register/WizardFormFirstPage.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport validate from './validate';\nimport renderField from './renderField';\nimport { connect } from 'react-redux';\n\nvar WizardFormFirstPage = function WizardFormFirstPage(props) {\n  console.log(props, \"First Page\");\n  var handleSubmit = props.handleSubmit;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"ui form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Field, {\n    name: \"firstName\",\n    type: \"text\",\n    component: renderField,\n    label: \"First Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"lastName\",\n    type: \"text\",\n    component: renderField,\n    label: \"Last Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Field, {\n    name: \"email\",\n    type: \"text\",\n    component: renderField,\n    label: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"ui button primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Continue\")));\n};\n\nvar formWrapped = reduxForm({\n  form: 'register',\n  // <------ same form name\n  destroyOnUnmount: false,\n  // <------ preserve form data\n  forceUnregisterOnUnmount: true,\n  // <------ unregister fields on unmount\n  validate: validate\n})(WizardFormFirstPage);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.auth.isSignedIn,\n    userId: state.auth.userId\n  };\n};\n\nexport default connect()(formWrapped);","map":{"version":3,"sources":["/Users/kyleschneider/Documents/pt-oncology-mvp/src/components/User/register/WizardFormFirstPage.js"],"names":["React","Field","reduxForm","validate","renderField","connect","WizardFormFirstPage","props","console","log","handleSubmit","formWrapped","form","destroyOnUnmount","forceUnregisterOnUnmount","mapStateToProps","state","isSignedIn","auth","userId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,KAAK,EAAI;AAEnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,YAAnB;AAFmC,MAG3BG,YAH2B,GAGVH,KAHU,CAG3BG,YAH2B;AAInC,SACE;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAA8B,IAAA,SAAS,EAAC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAEN,WAHb;AAIE,IAAA,KAAK,EAAC,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAEA,WAHb;AAIE,IAAA,KAAK,EAAC,WAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAEA,WAHb;AAIE,IAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAxBF,CADF;AAgCD,CApCD;;AAsCA,IAAMO,WAAW,GAAGT,SAAS,CAAC;AAC5BU,EAAAA,IAAI,EAAE,UADsB;AACV;AAClBC,EAAAA,gBAAgB,EAAE,KAFU;AAEH;AACzBC,EAAAA,wBAAwB,EAAE,IAHE;AAGI;AAChCX,EAAAA,QAAQ,EAARA;AAJ4B,CAAD,CAAT,CAKjBG,mBALiB,CAApB;;AAOA,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,UAAU,EAAED,KAAK,CAACE,IAAN,CAAWD,UADS;AAEhCE,IAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAFa,GAAL;AAAA,CAA7B;;AAKA,eAAed,OAAO,GAAGM,WAAH,CAAtB","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport validate from './validate'\nimport renderField from './renderField'\nimport {connect} from 'react-redux'\n\nconst WizardFormFirstPage = props => {\n\n  console.log(props, \"First Page\")\n  const { handleSubmit } = props\n  return (\n    <form onSubmit={handleSubmit} className=\"ui form\">\n      \n      <Field\n        name=\"firstName\"\n        type=\"text\"\n        component={renderField}\n        label=\"First Name\"\n        />\n\n      <Field\n        name=\"lastName\"\n        type=\"text\"\n        component={renderField}\n        label=\"Last Name\"\n        />\n      \n      \n      <Field\n        name=\"email\"\n        type=\"text\"\n        component={renderField}\n        label=\"Email\"\n      />\n\n      <div>\n        <button type=\"submit\" className=\"ui button primary\">\n          Continue\n        </button>\n      </div>\n    </form>\n  )\n}\n\nconst formWrapped = reduxForm({\n  form: 'register', // <------ same form name\n  destroyOnUnmount: false, // <------ preserve form data\n  forceUnregisterOnUnmount: true, // <------ unregister fields on unmount\n  validate\n})(WizardFormFirstPage)\n\nconst mapStateToProps = state => ({\n  isSignedIn: state.auth.isSignedIn,\n  userId: state.auth.userId\n});\n\nexport default connect()(formWrapped)"]},"metadata":{},"sourceType":"module"}